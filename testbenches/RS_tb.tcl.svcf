# SimVision Command Script (Mi Mai 15 10:49:35 CEST 2019)
#
# Version 15.20.s045
#
# You can restore this configuration with:
#
#      irun -access +rwc -sv -linedebug -timescale 1ns/1ns -f module_list.f -svseed random -s -input /home/amatthes/Documents/BachelorThesis/Code/testbenches/RS_tb.tcl
#


#
# Preferences
#
preferences set toolbar-Standard-WatchWindow {
  usual
  shown 0
}
preferences set toolbar-SimControl-WatchList {
  usual
  position -anchor e
}
preferences set waveform-print-variables all
preferences set txe-locate-add-fibers 1
preferences set signal-type-colors {assertion #FF0000 output #FFA500 group #0099FF inout #00FFFF input #FFFF00 fiber #00EEEE errorsignal #FF0000 unknown #FFFFFF overlay #0099FF internal #00FF00 reference #FFFFFF}
preferences set txe-navigate-search-locate 0
preferences set txe-view-hold 0
preferences set plugin-enable-svdatabrowser-new 1
preferences set toolbar-SimControl-WaveWindow {
  usual
  position -anchor e
}
preferences set cursorctl-dont-show-sync-warning 1
preferences set toolbar-Windows-WatchWindow {
  usual
  shown 0
}
preferences set verilog-colors {Su #ff0099 0 {} 1 {} HiZ #ff9900 We #00ffff Pu #9900ff Sm #00ff99 X #ff0000 StrX #ff0000 other #ffff00 Z #ff9900 Me #0000ff La #ff00ff St {}}
preferences set toolbar-sendToIndago-WaveWindow {
  usual
  position -pos 1
}
preferences set txe-navigate-waveform-locate 1
preferences set txe-view-hidden 0
preferences set toolbar-Standard-Console {
  usual
  position -pos 1
}
preferences set txe-search-show-linenumbers 1
preferences set toolbar-Search-Console {
  usual
  position -pos 2
}
preferences set plugin-enable-groupscope 0
preferences set key-bindings {PageUp PageUp Edit>Undo Ctrl+z View>Zoom>In Alt+i View>Zoom>Next {Alt+Right arrow} PageDown PageDown ScrollDown {Down arrow} Edit>Copy Ctrl+c Edit>Select>All Ctrl+a Simulation>NextInScope F7 View>Zoom>FullY_widget y Edit>Create>Group Ctrl+g Format>Radix>Decimal Ctrl+Shift+D Edit>Ungroup Ctrl+Shift+G TopOfPage Home Edit>Create>Condition Ctrl+e {command -console SimVision {%w sidebar access designbrowser selectall}} Alt+a ScrollLeft {Left arrow} Edit>SelectAllText Alt+a Edit>TextSearchConsole Alt+s View>Zoom>FullX_widget = Windows>SendTo>Waveform Ctrl+w Simulation>Return Shift+F5 View>CallstackDown {Ctrl+Down arrow} Select>All Ctrl+a Edit>Delete Del Format>Radix>Octal Ctrl+Shift+O Edit>Cut Ctrl+x Simulation>Run F2 Edit>Create>Marker Ctrl+m View>Center Alt+c View>CallstackInWindow Ctrl+k Edit>SelectAll Ctrl+a File>OpenDatabase Ctrl+o Edit>Redo Ctrl+y Format>Radix>Binary Ctrl+Shift+B View>ExpandSequenceTime>AtCursor Alt+x ScrollUp {Up arrow} File>CloseWindow Ctrl+Shift+w ScrollRight {Right arrow} View>Zoom>FullX Alt+= Edit>Create>Bus Ctrl+b Explore>NextEdge Ctrl+\] View>Zoom>Cursor-Baseline Alt+z View>Zoom>OutX Alt+o Edit>GoToLine Ctrl+g View>Zoom>Fit Alt+= View>Zoom>OutX_widget o View>CallstackUp {Ctrl+Up arrow} View>Bookmarks>Add Ctrl+b Format>Radix>Hexadecimal Ctrl+Shift+H Edit>Search Ctrl+f Simulation>Next F6 View>ShowValues Ctrl+s View>Zoom>InX Alt+i Edit>Create>MarkerAtCursor Ctrl+Shift+M View>Zoom>Out Alt+o Edit>TextSearch Ctrl+f Format>Signed Ctrl+Shift+S Edit>Paste Ctrl+v View>Zoom>Previous {Alt+Left arrow} Control>ReinvokeSimulator Ctrl+r View>CollapseSequenceTime>AtCursor Alt+s Format>Radix>ASCII Ctrl+Shift+A View>Zoom>InX_widget i BottomOfPage End Explore>PreviousEdge {Ctrl+[} Simulation>Step F5}
preferences set plugin-enable-interleaveandcompare 0
preferences set plugin-enable-waveformfrequencyplot 0
preferences set toolbar-SimControl-WatchWindow {
  usual
  shown 0
}
preferences set prompt-on-reinvoke 0
preferences set txe-navigate-waveform-next-child 1
preferences set toolbar-Windows-WatchList {
  usual
  position -pos 2
}
preferences set vhdl-colors {X #ff0000 0 {} L #00ffff H #00ffff U #9900ff 1 {} - {} Z #ff9900 W #ff0000}
preferences set txe-locate-scroll-x 1
preferences set txe-locate-scroll-y 1
preferences set txe-locate-pop-waveform 1
preferences set whats-new-dont-show-at-startup 1
preferences set toolbar-TimeSearch-WatchWindow {
  usual
  shown 0
}
preferences set key-bindings {Edit>Undo Ctrl+z PageUp PageUp View>Zoom>Next {Alt+Right arrow} View>Zoom>In Alt+i PageDown PageDown Edit>Copy Ctrl+c ScrollDown {Down arrow} Edit>Create>Group Ctrl+g View>Zoom>FullY_widget y Simulation>NextInScope F7 Edit>Select>All Ctrl+a Format>Radix>Decimal Ctrl+Shift+D Edit>Ungroup Ctrl+Shift+G TopOfPage Home Edit>Create>Condition Ctrl+e {command -console SimVision {%w sidebar access designbrowser selectall}} Alt+a ScrollLeft {Left arrow} Edit>SelectAllText Alt+a Edit>TextSearchConsole Alt+s View>Zoom>FullX_widget = Windows>SendTo>Waveform Ctrl+w Simulation>Return Shift+F5 View>CallstackDown {Ctrl+Down arrow} Select>All Ctrl+a Edit>Delete Del Format>Radix>Octal Ctrl+Shift+O Edit>Cut Ctrl+x Simulation>Run F2 Edit>Create>Marker Ctrl+m View>Center Alt+c View>CallstackInWindow Ctrl+k Edit>SelectAll Ctrl+a File>OpenDatabase Ctrl+o Edit>Redo Ctrl+y Format>Radix>Binary Ctrl+Shift+B View>ExpandSequenceTime>AtCursor Alt+x ScrollUp {Up arrow} File>CloseWindow Ctrl+Shift+w ScrollRight {Right arrow} View>Zoom>FullX Alt+= Edit>Create>Bus Ctrl+b Explore>NextEdge Ctrl+\] View>Zoom>Cursor-Baseline Alt+z View>Zoom>OutX Alt+o Edit>GoToLine Ctrl+g View>Zoom>Fit Alt+= View>Zoom>OutX_widget o View>CallstackUp {Ctrl+Up arrow} View>Bookmarks>Add Ctrl+b View>ShowValues Ctrl+s Simulation>Next F6 Edit>Search Ctrl+f Format>Radix>Hexadecimal Ctrl+Shift+H Edit>Create>MarkerAtCursor Ctrl+Shift+M View>Zoom>InX Alt+i View>Zoom>Out Alt+o Edit>TextSearch Ctrl+f View>Zoom>Previous {Alt+Left arrow} Edit>Paste Ctrl+v Format>Signed Ctrl+Shift+S Control>ReinvokeSimulator Ctrl+r View>CollapseSequenceTime>AtCursor Alt+s View>Zoom>InX_widget i Format>Radix>ASCII Ctrl+Shift+A Simulation>Step F5 Explore>PreviousEdge {Ctrl+[} BottomOfPage End}

#
# Simulator
#
database require simulator -hints {
	simulator "irun -access +rwc -gui -sv -linedebug -timescale 1ns/1ns -f module_list.f -svseed random -s -input RS_tb.tcl"
}
#
# Groups
#
catch {group new -name {Group 1} -overlay 0}
catch {group new -name {II and RAT} -overlay 0}
catch {group new -name ROB -overlay 0}
catch {group new -name RF -overlay 0}
catch {group new -name {RS INT} -overlay 0}
catch {group new -name RAT -overlay 0}
catch {group new -name FREE -overlay 0}
group using {Group 1}
group set -overlay 0
group set -comment {}
group clear 0 end

group using {II and RAT}
group set -overlay 0
group set -comment {}
group clear 0 end

group using ROB
group set -overlay 0
group set -comment {}
group clear 0 end

group using RF
group set -overlay 0
group set -comment {}
group clear 0 end

group using {RS INT}
group set -overlay 0
group set -comment {}
group clear 0 end

group using RAT
group set -overlay 0
group set -comment {}
group clear 0 end

group insert \
    [subst  {simulator::[format {rat_tb.rat_I.rat[0]}]} ] \
    [subst  {simulator::[format {rat_tb.rat_I.rat[1]}]} ] \
    [subst  {simulator::[format {rat_tb.rat_I.rat[2]}]} ] \
    [subst  {simulator::[format {rat_tb.rat_I.rat[3]}]} ] \
    [subst  {simulator::[format {rat_tb.rat_I.rat[4]}]} ] \
    [subst  {simulator::[format {rat_tb.rat_I.rat[5]}]} ] \
    [subst  {simulator::[format {rat_tb.rat_I.rat[6]}]} ] \
    [subst  {simulator::[format {rat_tb.rat_I.rat[7]}]} ]
group using FREE
group set -overlay 0
group set -comment {}
group clear 0 end

group insert \
    [subst  {simulator::[format {rat_tb.rat_I.free[0]}]} ] \
    [subst  {simulator::[format {rat_tb.rat_I.free[1]}]} ] \
    [subst  {simulator::[format {rat_tb.rat_I.free[2]}]} ] \
    [subst  {simulator::[format {rat_tb.rat_I.free[3]}]} ] \
    [subst  {simulator::[format {rat_tb.rat_I.free[4]}]} ] \
    [subst  {simulator::[format {rat_tb.rat_I.free[5]}]} ] \
    [subst  {simulator::[format {rat_tb.rat_I.free[6]}]} ] \
    [subst  {simulator::[format {rat_tb.rat_I.free[7]}]} ] \
    [subst  {simulator::[format {rat_tb.rat_I.free[8]}]} ]

#
# Markers
#
set time 90ns
if {[catch {marker new -name  {Marker 1} -time $time}] != ""} {
    marker set -using {Marker 1} -time $time
}
set time 110ns
if {[catch {marker new -name  {Marker 3} -time $time}] != ""} {
    marker set -using {Marker 3} -time $time
}
set time 70ns
if {[catch {marker new -name  {Marker 4} -time $time}] != ""} {
    marker set -using {Marker 4} -time $time
}
set time 130ns
if {[catch {marker new -name  {Marker 2} -time $time}] != ""} {
    marker set -using {Marker 2} -time $time
}

#
# Mnemonic Maps
#
mmap new -reuse -name {Boolean as Logic} -radix %b -contents {{%c=FALSE -edgepriority 1 -shape low}
{%c=TRUE -edgepriority 1 -shape high}}
mmap new -reuse -name {Example Map} -radix %x -contents {{%b=11???? -bgcolor orange -label REG:%x -linecolor yellow -shape bus}
{%x=1F -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=2C -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=* -label %x -linecolor gray -shape bus}}
mmap new -reuse -name Opcodes -radix %x -contents {{%b=0000011 -label LD}
{%b=0100011 -label SD}
{%b=0110011 -label ADD}
{%b=0000000 -label NONE}}
mmap new -reuse -name {Physical Register} -radix %x -contents {{%b=????? -label {P %x}}}
mmap new -reuse -name {Arch Register} -radix %x -contents {{%b=????? -label {R %x}}}
mmap new -reuse -name Busy -radix %b -contents {{%b=1 -edgepriority 1 -label BUSY -shape low}
{%b=0 -edgepriority 1 -label FREE -shape high}}
mmap new -reuse -name Number -radix %x -contents {{%d=? -font -*-courier-medium-r-normal--12-* -label %x -linecolor yellow -shape bus}}
mmap new -reuse -name Full -radix %x -contents {{%x=1 -label FULL}}
mmap new -reuse -name Stop -radix %x -contents {{%x=1 -label STOP}}
mmap new -reuse -name Free -radix %b -contents {{%b=0 -edgepriority 1 -label BUSY -shape low}
{%b=1 -edgepriority 1 -label FREE -shape high}}
mmap new -reuse -name Reset_n -radix %x -contents {{%x=0 -label RESET}}

#
# Design Browser windows
#
if {[catch {window new WatchList -name "Design Browser 2" -geometry 865x629+908+225}] != ""} {
    window geometry "Design Browser 2" 865x629+908+225
}
browser using {Design Browser 2}
browser set -scope [subst  {simulator::[format {rs_tb.rs_I}]} ]
browser set \
    -signalsort name
browser yview see [subst  {simulator::[format {rs_tb.rs_I}]} ]
browser timecontrol set -lock 0

#
# Waveform windows
#
if {[catch {window new WaveWindow -name "Waveform 1" -geometry 1920x1101+1919+27}] != ""} {
    window geometry "Waveform 1" 1920x1101+1919+27
}
window target "Waveform 1" on
waveform using {Waveform 1}
waveform sidebar visibility partial
waveform set \
    -primarycursor TimeA \
    -signalnames name \
    -signalwidth 326 \
    -units ns \
    -valuewidth 83
waveform baseline set -time 40ns

set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.clk}]}
	} ]]
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.res_n}]}
	} ]]
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.freeRegister[1:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.currentRegister[1:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.readyInstruction[1:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.stop_ex2rs}]}
	} ]]
set id [waveform add -cdivider divider]
set id [waveform add -label {FROM ID} -comment {}]
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.valid_id2rs}]}
	} ]]
waveform format $id -color #ff00ff
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.opcode_id2rs[6:0]}]}
	} ]]
waveform format $id -color #ff00ff
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.funct3_id2rs[2:0]}]}
	} ]]
waveform format $id -color #ff00ff
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.imm_id2rs[11:0]}]}
	} ]]
waveform format $id -color #ff00ff
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.full_rs2id}]}
	} ]]
set id [waveform add -cdivider divider]
set id [waveform add -label {FROM COM} -comment {}]
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.valid_0_com2rs}]}
	} ]]
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.rd_0_com2rs[5:0]}]}
	} ]]
waveform format $id -radix {Physical Register}
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.result_0_com2rs[63:0]}]}
	} ]]
waveform format $id -radix %d
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.valid_1_com2rs}]}
	} ]]
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.rd_1_com2rs[5:0]}]}
	} ]]
waveform format $id -radix {Physical Register}
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.result_1_com2rs[63:0]}]}
	} ]]
waveform format $id -radix %d
set id [waveform add -cdivider divider]
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.free[0]}]}
	} ]]
waveform format $id -radix Free
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.ready[0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.opcode[0]}]}
	} ]]
waveform format $id -radix Opcodes
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.rs1_address[0]}]}
	} ]]
waveform format $id -radix {Physical Register}
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.rs1_content[0]}]}
	} ]]
waveform format $id -radix %d
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.rs1_valid[0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.rs2_address[0]}]}
	} ]]
waveform format $id -radix {Physical Register}
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.rs2_content[0]}]}
	} ]]
waveform format $id -radix %d
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.rs2_valid[0]}]}
	} ]]
set id [waveform add -cdivider divider]
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.free[1]}]}
	} ]]
waveform format $id -radix Free
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.ready[1]}]}
	} ]]
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.opcode[1]}]}
	} ]]
waveform format $id -radix Opcodes
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.rs1_address[1]}]}
	} ]]
waveform format $id -radix {Physical Register}
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.rs1_content[1]}]}
	} ]]
waveform format $id -radix %d
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.rs1_valid[1]}]}
	} ]]
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.rs2_address[1]}]}
	} ]]
waveform format $id -radix {Physical Register}
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.rs2_content[1]}]}
	} ]]
waveform format $id -radix %d
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.rs2_valid[1]}]}
	} ]]
set id [waveform add -cdivider divider]
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.free[2]}]}
	} ]]
waveform format $id -radix Free
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.ready[2]}]}
	} ]]
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.opcode[2]}]}
	} ]]
waveform format $id -radix Opcodes
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.rs1_address[2]}]}
	} ]]
waveform format $id -radix {Physical Register}
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.rs1_content[2]}]}
	} ]]
waveform format $id -radix %d
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.rs1_valid[2]}]}
	} ]]
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.rs2_address[2]}]}
	} ]]
waveform format $id -radix {Physical Register}
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.rs2_content[2]}]}
	} ]]
waveform format $id -radix %d
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.rs2_valid[2]}]}
	} ]]
set id [waveform add -cdivider divider]
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.free[3]}]}
	} ]]
waveform format $id -radix Free
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.ready[3]}]}
	} ]]
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.opcode[3]}]}
	} ]]
waveform format $id -radix Opcodes
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.rs1_address[3]}]}
	} ]]
waveform format $id -radix {Physical Register}
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.rs1_content[3]}]}
	} ]]
waveform format $id -radix %d
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.rs1_valid[3]}]}
	} ]]
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.rs2_address[3]}]}
	} ]]
waveform format $id -radix {Physical Register}
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.rs2_content[3]}]}
	} ]]
waveform format $id -radix %d
set id [waveform add -signals [subst  {
	{simulator::[format {rs_tb.rs_I.rs2_valid[3]}]}
	} ]]

waveform xview limits 0 300ns

#
# Waveform Window Links
#

#
# Console windows
#
console set -windowname Console
window geometry Console 420x503+3400+20

#
# Layout selection
#

